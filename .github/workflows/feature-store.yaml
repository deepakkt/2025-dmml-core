name: Feature Store - Feast (Nightly)

on:
  workflow_dispatch: {}

jobs:
  feast-nightly:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping || exit 1"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 20

    env:
      DATA_REPO_NAME: 2025-dmml-data
      DATA_REPO_OWNER: deepakkt
      PYTHONUNBUFFERED: "1"

    steps:
      - name: Checkout 2025-dmml-core
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
           
      - name: Install deps (pinned, compatible)
        run: |
          python -m pip install --upgrade "pip<25" setuptools wheel
          pip install \
          "pandas==2.2.2" \
          "dask[dataframe]==2024.8.1" \
          "pyarrow==17.0.0" \
          "feast==0.52.0" \
          "redis==5.0.7" \
          "python-dateutil>=2.8.2"
            
      - name: Checkout data repo (2025-dmml-data)
        uses: actions/checkout@v4
        with:
          repository: ${{ env.DATA_REPO_OWNER }}/${{ env.DATA_REPO_NAME }}
          token: ${{ secrets.DATA_REPO_TOKEN }}
          path: data-repo

      - name: Wait for Redis
        run: |
          python - <<'PY'
          import time, redis
          for i in range(30):
              try:
                  r = redis.Redis(host='localhost', port=6379, db=0)
                  r.ping()
                  print("Redis is ready"); break
              except Exception as e:
                  print("Waiting for Redis...", e); time.sleep(2)
              else:
                  raise SystemExit("Redis not ready")
          PY

      - name: Build/apply/materialize Feast repo, validate data, and generate catalog
        run: |
          python tools/feature_store/build_feature_store.py \
            --data-repo ./data-repo \
            --repo-path ./feature_repo \
            --redis "localhost:6379,db=0" \
            --apply \
            --materialize \
            --generate-catalog
            
      - name: Commit generated docs if changed
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          CHANGED=0
          git add docs/FEATURE_CATALOG.md docs/feature_catalog.csv || true
          git diff --cached --quiet || CHANGED=1
          if [ "$CHANGED" -eq 1 ]; then
            git commit -m "feat(feast): update feature catalog"
            git push
          else
            echo "No catalog changes."
          fi
