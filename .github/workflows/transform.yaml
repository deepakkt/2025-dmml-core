name: Transform features and store

on:
  workflow_dispatch:

jobs:
  transform-and-store:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    env:
      DATA_REPO: 2025-dmml-data
      CORE_REPO: 2025-dmml-core
      DATA_DIR: prepared-data
      OUT_DIR: transformed-data
      SPEC_PATH: tools/data_transformation/feature_spec.json
      SCRIPT_PATH: tools/data_transformation/transform_features.py
      TABLE_NAME: features_churn_v1
      PROFILE: tree_baseline  # set to linear_baseline if you want z-scored inputs

    steps:
      - name: Checkout core repo
        uses: actions/checkout@v4

      - name: Verify required files exist
        run: |
          test -f "$SPEC_PATH" || (echo "Missing spec at $SPEC_PATH" && exit 1)
          test -f "$SCRIPT_PATH" || (echo "Missing transformer at $SCRIPT_PATH" && exit 1)

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy python-dateutil

      - name: Clone data repo (read/write)
        run: |
          git clone \
            https://x-access-token:${{ secrets.DATA_REPO_TOKEN }}@github.com/${{ github.repository_owner }}/${{ env.DATA_REPO }}.git \
            ../${{ env.DATA_REPO }}

      - name: Run transformation
        run: |
          python "$SCRIPT_PATH" \
            --spec "$SPEC_PATH" \
            --input "../${{ env.DATA_REPO }}/${{ env.DATA_DIR }}/prepared.csv" \
            --out-csv "../${{ env.DATA_REPO }}/${{ env.OUT_DIR }}/transformed.csv" \
            --out-sqlite "../${{ env.DATA_REPO }}/${{ env.OUT_DIR }}/transformed.sqlite" \
            --table-name "$TABLE_NAME" \
            --profile "$PROFILE"

      - name: Commit & push outputs to data repo
        working-directory: ../${{ env.DATA_REPO }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          mkdir -p "${{ env.OUT_DIR }}"
          git add "${{ env.OUT_DIR }}/transformed.csv" "${{ env.OUT_DIR }}/transformed.sqlite" || true
          if ! git diff --cached --quiet; then
            git commit -m "feat(transform): update transformed outputs ($(date -u +'%Y-%m-%dT%H:%M:%SZ'))"
            git push origin HEAD
          else
            echo "No changes to commit."
          fi
